// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: pHEc37smer1Q6xynjofQze
// Component: 7JvnWRKffJAgeh
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header2 from "../../Header2"; // plasmic-import: 0f6fZeRfKp3EOx/component
import ProductCard from "../../ProductCard"; // plasmic-import: -LfFeyZiOYdDxo/component
import Ratings from "../../Ratings"; // plasmic-import: IuSNyP1i29NJld/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: zao5vJN0LZKBgA/component
import BlogPost from "../../BlogPost"; // plasmic-import: jeBG2EE2oYolA-/component
import Footer from "../../Footer"; // plasmic-import: B_rjbW1b21_BN/component
import MenuButton from "../../MenuButton"; // plasmic-import: CtOGPAYYB9Obua/component
import { useScreenVariants as useScreenVariantsv5FSi0UE2M7YwV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: V5fSI0uE2M7ywV/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_planty.module.css"; // plasmic-import: pHEc37smer1Q6xynjofQze/projectcss
import sty from "./PlasmicFaq.module.css"; // plasmic-import: 7JvnWRKffJAgeh/css
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: akpqReMOnsG-aF/icon
import DotSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__DotSvgrepoCom1Svg"; // plasmic-import: bsHE52HUidiR21/icon
import LocationSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__LocationSvgrepoCom1Svg"; // plasmic-import: sXOk1_qfYvKUXe/icon
import LogoWhitesvgIcon from "./icons/PlasmicIcon__LogoWhitesvg"; // plasmic-import: PUJ-tMkxMFdh63/icon

export const PlasmicFaq__VariantProps = new Array();

export const PlasmicFaq__ArgProps = new Array();

function PlasmicFaq__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsv5FSi0UE2M7YwV()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__a6B5I)}>
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <Header2
                  className={classNames("__wab_instance", sty.header2__zwZgG)}
                />
              ) : null}

              <div className={classNames(projectcss.all, sty.freeBox___87CEm)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground2"}
                  data-plasmic-override={overrides.foreground2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground2)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kfDmF)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1___4OoqF
                      )}
                    >
                      {"Behold our FAQ"}
                    </h1>

                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___6QVqq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rAhSs
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                            : "All right, friends. Letâ€™s do this. This section will cover basic, frequently asked questions for e-commerce merchants."}
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kwjcg)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__mnGfk)}>
                  {true ? (
                    <Header2
                      className={classNames(
                        "__wab_instance",
                        sty.header2__ftXK
                      )}
                    />
                  ) : null}
                </div>
              </p.Stack>

              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__gMhy5)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__uRKbH
                    )}
                  >
                    {"Top Collections"}
                  </h2>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__ssKo)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__jnyPh)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__dTpSp
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__hEch5)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/galinaNMiziNqvJx5MUnsplashjpg.jpeg",
                            fullWidth: 1920,
                            fullHeight: 1278,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$65.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__uyDZn
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__taG3X)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___6PBui
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__aFxMh)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/igorSonFvPxCqgtwcUnsplashjpg.jpeg",
                            fullWidth: 640,
                            fullHeight: 481,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$80.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__pCrG
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__msE02)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__vpSrN
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__dGXc)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/scottWebbORwRlTgBrPoUnsplashjpg.jpeg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$40.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__m5Nw1
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__mFKj3)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__t5RYx
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__j3PNy)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/freddieMarriageUcfKyTanLuUnsplashjpg.jpeg",
                            fullWidth: 640,
                            fullHeight: 427,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___3XUiy
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <FeatureItem
                  data-plasmic-name={"featureItem"}
                  data-plasmic-override={overrides.featureItem}
                  className={classNames("__wab_instance", sty.featureItem)}
                />
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__pk8M)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aGnC
                    )}
                  >
                    {"Featured Products"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___02YWk)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__u0UhT)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__oi7EQ
                      )}
                      price={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6ZYar
                          )}
                        >
                          {"$160.00"}
                        </div>
                      }
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__a3UtR
                          )}
                          numReviews={"(12 Review)"}
                          stars={"two"}
                        />
                      }
                      title={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fny1O
                          )}
                        >
                          {"Designed Sofa"}
                        </div>
                      }
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__nt265)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__fc5F
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__rzXdb)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/f2.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$200.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__k1FzS
                          )}
                          stars={"four"}
                        />
                      }
                      title={"Dining Table"}
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__f8NfW)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___37U
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__ol7AS)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/f3.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___1Voe5
                          )}
                          numReviews={"(23 Review)"}
                          stars={"five"}
                        />
                      }
                      title={"Chair and Table"}
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__ofKqh)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__wydKf
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__lC5R6)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/f4.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$299.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___8AkMt
                          )}
                          numReviews={"(35 Review)"}
                        />
                      }
                      title={"Modern Arm Chair"}
                      withReviews={true}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__bLkVo)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ml4Js
                    )}
                  >
                    {"Latest Blog"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__zXNrF)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__iMa65)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__uhlTq
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__d7Qwk)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/b1.jpeg",
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__alfn4)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost___8CPij
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__o5Lre)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/b2.jpeg",
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___5DQ1)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__kbF3G
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__bleNb)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/b3.jpeg",
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gfXhZ)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wKj5O)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"90px"}
                    src={{
                      src: "/plasmic/planty/images/adidas.png",
                      fullWidth: 90,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__oPk6N)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"91px"}
                    src={{
                      src: "/plasmic/planty/images/hm.png",
                      fullWidth: 91,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__eoaCz)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"98px"}
                    src={{
                      src: "/plasmic/planty/images/kappa.png",
                      fullWidth: 98,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fKrkh)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"124px"}
                    src={{
                      src: "/plasmic/planty/images/lacoste.png",
                      fullWidth: 124,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__us8N6)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"125px"}
                    src={{
                      src: "/plasmic/planty/images/levis.png",
                      fullWidth: 125,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              ) : null}
              {true ? (
                <Footer
                  className={classNames("__wab_instance", sty.footer__dJaY)}
                />
              ) : null}
            </div>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"bigPlants"}
              data-plasmic-override={overrides.bigPlants}
              hasGap={true}
              className={classNames(projectcss.all, sty.bigPlants)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gBkox)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__hSfbm
                    )}
                  >
                    {"Big plants"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__yhaS)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___26MGr)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__bItH7)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant6Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__g7Ab)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__jEf34)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div className={classNames(projectcss.all, sty.freeBox__qme)}>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___8OGxr
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Donec finibus"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___05LMn
                      )}
                    >
                      {"bigplants"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__qDfSc
                      )}
                    >
                      {"$100.00"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__d6KGy)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fBlTp)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant1Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__kJsN2)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__dz02D)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__tWv06)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__wFphm
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Nulla suscipit"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h1VAt
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__guZg
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__fELfA)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__nBrL5)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant7Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wQvRl)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__fqQiQ)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__aOz6V)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__taW5E
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Sed consectetur"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jWzlM
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___1VJj
                      )}
                    >
                      {"$18.40 "}
                    </h5>
                  </div>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__hkTzt)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant5Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pZhd)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg___6LXt7)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__ox79N)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__etUc7
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Vestibulum eget"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0QF
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__ui8FA
                      )}
                    >
                      {"$220.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"cactuses"}
              data-plasmic-override={overrides.cactuses}
              hasGap={true}
              className={classNames(projectcss.all, sty.cactuses)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ueDev)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__d755I
                    )}
                  >
                    {"Cactuses"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__tz3Dj)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__kQez8)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___6LqEm)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant41Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tt0Bs)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__i5LV)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__hvR8I)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__q8YZn
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Cras molestie"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6RlWt
                      )}
                    >
                      {"cactuses "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__wRxXi
                      )}
                    >
                      {"$24.99"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___4Ntvg)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__j5N)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant31Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vc2MQ)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__llOpx)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__bRnP)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___7Hra
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Curabitur eu tempor"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dR2Az
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__coXHy
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__aVLwg)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cHDbQ)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant9Webp.webp",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ppAhx)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__aa2Yl)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__siPp)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__fRmE
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Fusce sagittis"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kb1Gi
                      )}
                    >
                      {"Fusce sagittis"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___1Lvam
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__anCfn)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__lImPh)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant2Webp.webp",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__o7Z8S)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg___1LzJu)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__zjVEq)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__n6Abx
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Integer porta"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ifKiT
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__dTc7B
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__ouFd)}>
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ekZwg)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__ysI4N
                    )}
                  >
                    {"How long does shipping take?"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__w1Fyz
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "Now thatâ€™s a frequent one all right, ainâ€™t it? Your answer to this should manage customer expectations. Just like a good checkout flow should. Tell them the truth"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__uI27O)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wlrpz
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ng6Ao
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__w2CaT
                            )}
                          >
                            {
                              "US shipping will take between 3 to 5 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cqnyD
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lGdT
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lElj7
                            )}
                          >
                            {
                              "International shipping will take between 5 and 10 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yoQft
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___4YIo
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b1I1S
                            )}
                          >
                            {
                              "Mars shipping will be automatically redirected to Elon Muskâ€™s Twitter account."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wsGrD)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__y7O8M
                    )}
                  >
                    {"How do refunds and returns work?"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u1YIg
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "It happens. Even the most beautiful of plants will disappoint someone. Again, tell it like it is:"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__gYwpj)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gphPk
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__eXfK5
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__krHcE
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__cbghM
                                )}
                              >
                                {"All discounted items sales are final."}
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__mXe3R
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__nmSno
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__bU8B
                                )}
                              >
                                {
                                  "If youâ€™d like another version of your item, please use the return label. Instructions are printed on its back."
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__omQr
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__uZaGg
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jXeN2
                                )}
                              >
                                {
                                  "If your item is damaged or not functioning correctly, email us at info@planty.com, and weâ€™ll refund you + send you a new one ASAP!"
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___2D61W)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__xvgAu
                    )}
                  >
                    {"Rapid-fire questions"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9M5F
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__nO3Mo)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__sXZt
                    )}
                  >
                    {"How do you handle sensitive customer information?"}
                  </h4>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rg3U
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>

                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__wUsoo)}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cB3Ui
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__z6Y
                            )}
                          >
                            {"Q: Why is this Planty theme so beautiful?"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sMAsM
                            )}
                          >
                            {
                              "A: We hired our first designer a couple of months ago."
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nOaA
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mfX53
                            )}
                          >
                            {"Q: Why did you build a theme for Stackbit?"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fFift
                            )}
                          >
                            {
                              "A: We believe in Stackbitâ€™s promise of opening up the JAMstack to more developers. Plus, we trust these folks.\n Read more about Stackbit"
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ptkn0
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__txUDe
                            )}
                          >
                            {"Q: How many people work at Snipcart? "}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dxWxz
                            )}
                          >
                            {
                              "A: Not a lot! Weâ€™re a small, bootstrapped team of eight human beings. Michael might be a robot, though. "
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__srx5E
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sRIou
                            )}
                          >
                            {"Q: Why is Snipcart based in QuÃ©bec City?"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wpndI
                            )}
                          >
                            {"A: Have you been here? Itâ€™s beaaautiful!"}
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__f6Zpg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__z2ItZ
                            )}
                          >
                            {"Q: Whatâ€™s the meaning of life? "}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jDAfm
                            )}
                          >
                            {
                              "A: Weâ€™re not quite sure. But building useful products with people we love feels meaningful enough."
                            }
                          </div>
                        </div>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
            </div>
          ) : null}
          {true ? (
            <Footer
              className={classNames("__wab_instance", sty.footer__yn0Gw)}
            />
          ) : null}

          <div className={classNames(projectcss.all, sty.freeBox___2A6Ga)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__hSRlT)}>
                <div className={classNames(projectcss.all, sty.columns__geFw)}>
                  <div
                    className={classNames(projectcss.all, sty.column__bqN1F)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___6N8E8)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "562px"
                          : "562px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "100%"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "947px"
                          : "947px"
                      }
                      loading={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "lazy"
                          : "lazy"
                      }
                      src={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? {
                              src: "/plasmic/planty/images/promowebp.webp",
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                          : {
                              src: "/plasmic/planty/images/promowebp.webp",
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                      }
                    />
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__qaN2W)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__oAuLw
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Behold our FAQ"
                        : "Still have questions?\nContact us. "}
                    </h1>

                    <div
                      className={classNames(projectcss.all, sty.columns__sTXb)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.column__lWEr)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6TtBy
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "226 rue St-Joseph E, \nQuÃ©bec, QC, Canada, \nG1K 3A9"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hxu32
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "+1-202-555-0112"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.column__xfUzF
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__c0Dq1
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "geeks@snipcart.com"}
                        </div>

                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yisDu
                            )}
                          >
                            {(
                              hasVariant(globalVariants, "screen", "mobile")
                                ? true
                                : true
                            ) ? (
                              <p.Stack
                                as={p.PlasmicLink}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  sty.link__c5U2X
                                )}
                                component={Link}
                                platform={"nextjs"}
                              >
                                <LocationSvgrepoCom1SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__w78AS
                                  )}
                                  role={"img"}
                                />

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__veQyM
                                  )}
                                >
                                  {hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? "Discover"
                                    : "On the map"}
                                </div>
                              </p.Stack>
                            ) : null}
                          </div>
                        ) : null}
                      </p.Stack>
                    </div>
                  </p.Stack>
                </div>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___16NuW)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__twLdR)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mySup)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__feOb
                        )}
                      >
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <MenuButton
                            data-plasmic-name={"menuButton"}
                            data-plasmic-override={overrides.menuButton}
                            className={classNames(
                              "__wab_instance",
                              sty.menuButton
                            )}
                          />
                        ) : null}
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__duhIg
                            )}
                          >
                            <p.PlasmicIcon
                              PlasmicIconType={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? LogoWhitesvgIcon
                                  : LogoWhitesvgIcon
                              }
                              className={classNames(
                                projectcss.all,
                                sty.svg__or9Fc
                              )}
                              role={"img"}
                            />

                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link___3S7M
                              )}
                              component={Link}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? "#"
                                  : "/store"
                              }
                              platform={"nextjs"}
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Store"
                                : "Store"}
                            </p.PlasmicLink>

                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__tn69J
                              )}
                              component={Link}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? "#"
                                  : "/about"
                              }
                              platform={"nextjs"}
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "About"
                                : "About"}
                            </p.PlasmicLink>

                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__a5FiN
                              )}
                              component={Link}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? "#"
                                  : "/faq"
                              }
                              platform={"nextjs"}
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Faq"
                                : "Faq"}
                            </p.PlasmicLink>
                          </p.Stack>
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tqjqG
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__szo8O
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Â© Company. All rights reserved. This site proudly built with "
                              : "Â© Company. All rights reserved. This site proudly built with "}
                          </div>

                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__o6I4
                            )}
                            component={Link}
                            href={
                              hasVariant(globalVariants, "screen", "mobile")
                                ? "https://www.plasmic.app/"
                                : "https://www.plasmic.app/"
                            }
                            platform={"nextjs"}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Plasmic"
                              : "Plasmic"}
                          </p.PlasmicLink>
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                ) : null}
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground2",
    "header",
    "featureItem",
    "bigPlants",
    "cactuses",
    "menuButton"
  ],

  foreground2: ["foreground2"],
  header: ["header", "featureItem"],
  featureItem: ["featureItem"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  menuButton: ["menuButton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFaq__ArgProps,
      internalVariantPropNames: PlasmicFaq__VariantProps
    });

    return PlasmicFaq__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFaq";
  } else {
    func.displayName = `PlasmicFaq.${nodeName}`;
  }
  return func;
}

export const PlasmicFaq = Object.assign(
  // Top-level PlasmicFaq renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    header: makeNodeComponent("header"),
    featureItem: makeNodeComponent("featureItem"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    menuButton: makeNodeComponent("menuButton"),
    // Metadata about props expected for PlasmicFaq
    internalVariantProps: PlasmicFaq__VariantProps,
    internalArgProps: PlasmicFaq__ArgProps
  }
);

export default PlasmicFaq;
/* prettier-ignore-end */
