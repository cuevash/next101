// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: pHEc37smer1Q6xynjofQze
// Component: Wl9mo-hDwAqvqr
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header3 from "../../Header3"; // plasmic-import: H-iy64raaXQNqw/component
import Header2 from "../../Header2"; // plasmic-import: 0f6fZeRfKp3EOx/component
import ProductCard from "../../ProductCard"; // plasmic-import: -LfFeyZiOYdDxo/component
import Ratings from "../../Ratings"; // plasmic-import: IuSNyP1i29NJld/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: zao5vJN0LZKBgA/component
import BlogPost from "../../BlogPost"; // plasmic-import: jeBG2EE2oYolA-/component
import Footer from "../../Footer"; // plasmic-import: B_rjbW1b21_BN/component
import ProductRow from "../../ProductRow"; // plasmic-import: bLfbJFXqGo9g4o/component
import { useScreenVariants as useScreenVariantsv5FSi0UE2M7YwV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: V5fSI0uE2M7ywV/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_planty.module.css"; // plasmic-import: pHEc37smer1Q6xynjofQze/projectcss
import sty from "./PlasmicSinglePage.module.css"; // plasmic-import: Wl9mo-hDwAqvqr/css
import LeftArrowSvgrepoComsvgIcon from "./icons/PlasmicIcon__LeftArrowSvgrepoComsvg"; // plasmic-import: 6Pq1zvrfGo7mDU/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: akpqReMOnsG-aF/icon

export const PlasmicSinglePage__VariantProps = new Array();

export const PlasmicSinglePage__ArgProps = new Array();

function PlasmicSinglePage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsv5FSi0UE2M7YwV()
  });

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__bsYtW)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__c8OaN)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobile") ? true : true
                  ) ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ePEk2)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"35%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/planty/images/header5Jpg.jpeg",
                        fullWidth: 502,
                        fullHeight: 872,
                        aspectRatio: undefined
                      }}
                    />
                  ) : null}

                  <Header3
                    data-plasmic-name={"header3"}
                    data-plasmic-override={overrides.header3}
                    className={classNames("__wab_instance", sty.header3)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox___3GmK8)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobile")
                        ? true
                        : true
                    ) ? (
                      <p.Stack
                        as={p.PlasmicLink}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__w8B8W
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        <LeftArrowSvgrepoComsvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___9KTgt
                          )}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vBzVu
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "see all products"
                            : "see all products"}
                        </div>
                      </p.Stack>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"foreground2"}
                      data-plasmic-override={overrides.foreground2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.foreground2)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.columns__d3Q25
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___25C0J
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__o87KM)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/planty/images/plant6Lgwebp.webp",
                              fullWidth: 900,
                              fullHeight: 900,
                              aspectRatio: undefined
                            }}
                          />
                        </div>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__ceOFm
                          )}
                        >
                          <h3
                            data-plasmic-name={"h3"}
                            data-plasmic-override={overrides.h3}
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3
                            )}
                          >
                            {"Donec finibus"}
                          </h3>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aGkFf
                            )}
                          >
                            {"big plants"}
                          </div>

                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__l9EzR
                            )}
                          >
                            {"$100.00"}
                          </h5>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__hzNe
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__umPjj
                              )}
                            >
                              {"Cras molestie faucibus ipsum ut vulputate."}
                            </div>

                            {(
                              hasVariant(globalVariants, "screen", "mobile")
                                ? true
                                : true
                            ) ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___0Fa2S
                                )}
                              >
                                {(
                                  hasVariant(globalVariants, "screen", "mobile")
                                    ? true
                                    : true
                                ) ? (
                                  <p.Stack
                                    as={p.PlasmicLink}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      sty.link__r4Sjf
                                    )}
                                    component={Link}
                                    platform={"nextjs"}
                                  >
                                    <Icon3Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__di5X8
                                      )}
                                      role={"img"}
                                    />

                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__mKjoO
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "mobile"
                                      )
                                        ? "Discover"
                                        : "Add to cart"}
                                    </div>
                                  </p.Stack>
                                ) : null}
                              </div>
                            ) : null}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </div>
              ) : null}
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rNc6Y)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__ziT1Z)}>
                  {true ? (
                    <Header2
                      data-plasmic-name={"header2"}
                      data-plasmic-override={overrides.header2}
                      className={classNames("__wab_instance", sty.header2)}
                    />
                  ) : null}
                </div>
              </p.Stack>

              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__oidT1)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__d7AX0
                    )}
                  >
                    {"Top Collections"}
                  </h2>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__iRkyj)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__llZnK)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__aCldb
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__mOuE5)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/galinaNMiziNqvJx5MUnsplashjpg.jpeg",
                            fullWidth: 1920,
                            fullHeight: 1278,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$65.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__mo3EJ
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__gYcOv)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__qiRU
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___3R9X)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/igorSonFvPxCqgtwcUnsplashjpg.jpeg",
                            fullWidth: 640,
                            fullHeight: 481,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$80.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___1Te6P
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___00Yo5)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___8Z3Le
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__xeDvM)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/scottWebbORwRlTgBrPoUnsplashjpg.jpeg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$40.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__sWmqK
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__sgEpx)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__mor7X
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__iKovF)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/freddieMarriageUcfKyTanLuUnsplashjpg.jpeg",
                            fullWidth: 640,
                            fullHeight: 427,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__u9CPd
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <FeatureItem
                  data-plasmic-name={"featureItem"}
                  data-plasmic-override={overrides.featureItem}
                  className={classNames("__wab_instance", sty.featureItem)}
                />
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__abwps)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___65CFl
                    )}
                  >
                    {"Featured Products"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__rHswZ)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__iwsqe)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__ojkj7
                      )}
                      price={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sn2Lc
                          )}
                        >
                          {"$160.00"}
                        </div>
                      }
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__fTokW
                          )}
                          numReviews={"(12 Review)"}
                          stars={"two"}
                        />
                      }
                      title={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eDh2
                          )}
                        >
                          {"Designed Sofa"}
                        </div>
                      }
                      withReviews={true}
                    />
                  </div>

                  <div className={classNames(projectcss.all, sty.column__lzMS)}>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__f5VCo
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___1QkAt)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/f2.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$200.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__z2MlD
                          )}
                          stars={"four"}
                        />
                      }
                      title={"Dining Table"}
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__g9V3H)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__cbtBf
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__lruPc)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/f3.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__xfbSs
                          )}
                          numReviews={"(23 Review)"}
                          stars={"five"}
                        />
                      }
                      title={"Chair and Table"}
                      withReviews={true}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__toBjC)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__hdzvG
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__vGWs)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/f4.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$299.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__pdkX
                          )}
                          numReviews={"(35 Review)"}
                        />
                      }
                      title={"Modern Arm Chair"}
                      withReviews={true}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__rizdw)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ydMsG
                    )}
                  >
                    {"Latest Blog"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__wbdS)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__jVsDz)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__vWuap
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__axj82)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/b1.jpeg",
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__gjBEp)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__dzDjt
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__oM5Jg)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/b2.jpeg",
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>

                  <div className={classNames(projectcss.all, sty.column__nJkR)}>
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__sv0NF
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__p6DEv)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: "/plasmic/planty/images/b3.jpeg",
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tzZer)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__uhkT)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"90px"}
                    src={{
                      src: "/plasmic/planty/images/adidas.png",
                      fullWidth: 90,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__vBpnp)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"91px"}
                    src={{
                      src: "/plasmic/planty/images/hm.png",
                      fullWidth: 91,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__c7DG2)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"98px"}
                    src={{
                      src: "/plasmic/planty/images/kappa.png",
                      fullWidth: 98,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__gAbO4)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"124px"}
                    src={{
                      src: "/plasmic/planty/images/lacoste.png",
                      fullWidth: 124,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___21ElP)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"125px"}
                    src={{
                      src: "/plasmic/planty/images/levis.png",
                      fullWidth: 125,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              ) : null}
              {true ? (
                <Footer
                  className={classNames("__wab_instance", sty.footer__vdlZ6)}
                />
              ) : null}
            </div>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"bigPlants"}
              data-plasmic-override={overrides.bigPlants}
              hasGap={true}
              className={classNames(projectcss.all, sty.bigPlants)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ePzAh)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__sNn5Q
                    )}
                  >
                    {"Big plants"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__qvaDz)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___1DpEs)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fjwkS)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant6Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__lk1AD)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__gjIuK)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__ytlfa)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___8Bnk4
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Donec finibus"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pU3As
                      )}
                    >
                      {"bigplants"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___2Lugo
                      )}
                    >
                      {"$100.00"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__jlGi)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__qXorK)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant1Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2CzjR
                      )}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__t5PKj)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__yRdQj)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__xrBHy
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Nulla suscipit"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5QrOv
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__afzlr
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__bmlsk)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__yfp6U)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant7Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox___802J)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__ugQ0)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__meWwn)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__wx6KV
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Sed consectetur"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9JezG
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___9PIt4
                      )}
                    >
                      {"$18.40 "}
                    </h5>
                  </div>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__zeTjZ)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant5Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aHqT)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg___93RZs)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__r2ChL)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__unufM
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Vestibulum eget"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7Z2Ap
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__an9Iz
                      )}
                    >
                      {"$220.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"cactuses"}
              data-plasmic-override={overrides.cactuses}
              hasGap={true}
              className={classNames(projectcss.all, sty.cactuses)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__oUa1N)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__gxBcd
                    )}
                  >
                    {"Cactuses"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__mkl0Z)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__pt5Ba)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__nbClg)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant41Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yD53O)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg___3CteV)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__s1Ylb)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___6NjS
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Cras molestie"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v3No
                      )}
                    >
                      {"cactuses "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__zlOnf
                      )}
                    >
                      {"$24.99"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__xDWu)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__rs16S)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant31Jpg.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wxCA)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__ojBh1)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__zo3Rr)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__xTGj8
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Curabitur eu tempor"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cj9J5
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__gpIYo
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__ryQWo)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fgwvU)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant9Webp.webp",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__p4V7P)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__oNaMc)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__mdpnY)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__yfShv
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Fusce sagittis"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pynTb
                      )}
                    >
                      {"Fusce sagittis"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__h8TE
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__xpYy)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__aSfOq)}
                    displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/planty/images/plant2Webp.webp",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox___0Ai2)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg___1IXmd)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__zAuPm)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___1Ak6H
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Integer porta"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rVRoE
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__ekr9F
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <p.Stack
            as={"div"}
            data-plasmic-name={"bestSellers"}
            data-plasmic-override={overrides.bestSellers}
            hasGap={true}
            className={classNames(projectcss.all, sty.bestSellers)}
          >
            {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___5DqLh)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__wlpyW
                  )}
                >
                  {"Related"}
                </h2>
              </p.Stack>
            ) : null}
            {(hasVariant(globalVariants, "screen", "mobile") ? true : true) ? (
              <ProductRow
                data-plasmic-name={"productRow"}
                data-plasmic-override={overrides.productRow}
                className={classNames("__wab_instance", sty.productRow)}
              />
            ) : null}
          </p.Stack>

          <Footer className={classNames("__wab_instance", sty.footer__uOrEe)} />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header3",
    "foreground2",
    "h3",
    "header",
    "header2",
    "featureItem",
    "bigPlants",
    "cactuses",
    "bestSellers",
    "productRow"
  ],

  header3: ["header3"],
  foreground2: ["foreground2", "h3"],
  h3: ["h3"],
  header: ["header", "header2", "featureItem"],
  header2: ["header2"],
  featureItem: ["featureItem"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  bestSellers: ["bestSellers", "productRow"],
  productRow: ["productRow"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSinglePage__ArgProps,
      internalVariantPropNames: PlasmicSinglePage__VariantProps
    });

    return PlasmicSinglePage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSinglePage";
  } else {
    func.displayName = `PlasmicSinglePage.${nodeName}`;
  }
  return func;
}

export const PlasmicSinglePage = Object.assign(
  // Top-level PlasmicSinglePage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header3: makeNodeComponent("header3"),
    foreground2: makeNodeComponent("foreground2"),
    h3: makeNodeComponent("h3"),
    header: makeNodeComponent("header"),
    header2: makeNodeComponent("header2"),
    featureItem: makeNodeComponent("featureItem"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    bestSellers: makeNodeComponent("bestSellers"),
    productRow: makeNodeComponent("productRow"),
    // Metadata about props expected for PlasmicSinglePage
    internalVariantProps: PlasmicSinglePage__VariantProps,
    internalArgProps: PlasmicSinglePage__ArgProps
  }
);

export default PlasmicSinglePage;
/* prettier-ignore-end */
