// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: pHEc37smer1Q6xynjofQze
// Component: 6wbL_yLZ6qL
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: Tv1TEamQVURUK/component
import Button from "../../Button"; // plasmic-import: oB--Goin9nXSTb/component
import ProductCard from "../../ProductCard"; // plasmic-import: -LfFeyZiOYdDxo/component
import Ratings from "../../Ratings"; // plasmic-import: IuSNyP1i29NJld/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: zao5vJN0LZKBgA/component
import BlogPost from "../../BlogPost"; // plasmic-import: jeBG2EE2oYolA-/component
import Footer from "../../Footer"; // plasmic-import: B_rjbW1b21_BN/component
import ProductRow from "../../ProductRow"; // plasmic-import: bLfbJFXqGo9g4o/component
import { useScreenVariants as useScreenVariantsv5FSi0UE2M7YwV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: V5fSI0uE2M7ywV/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_planty.module.css"; // plasmic-import: pHEc37smer1Q6xynjofQze/projectcss
import sty from "./PlasmicHome2.module.css"; // plasmic-import: 6wbL_yLZ6qL/css
import ButtonArrowIcon from "./icons/PlasmicIcon__ButtonArrow"; // plasmic-import: jlA16urbNwYxya/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: zEbPE1di54zoFB/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: akpqReMOnsG-aF/icon
import QuotessvgIcon from "./icons/PlasmicIcon__Quotessvg"; // plasmic-import: UCjD1tfFI5j0sC/icon

export const PlasmicHome2__VariantProps = new Array();

export const PlasmicHome2__ArgProps = new Array();

function PlasmicHome2__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsv5FSi0UE2M7YwV()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_library_plasmic_color_type_css.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox__q1DRg)}>
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__udlSs)}
        >
          <div className={classNames(projectcss.all, sty.freeBox__jyvG)}>
            <Header
              className={classNames("__wab_instance", sty.header__zWcMt)}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ua6Nw)}
            >
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Real, beautiful plants \nright to your door"}
              </h1>

              <Button
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames("__wab_instance", sty.button)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___89RPc
                  )}
                >
                  {"See all plants"}
                </div>

                <ButtonArrowIcon
                  className={classNames(projectcss.all, sty.svg___4Je)}
                  role={"img"}
                />
              </Button>
            </p.Stack>
          </div>
        </p.Stack>

        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__ft3Fc)}>
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__xfpL
              )}
            >
              {"Top Collections"}
            </h2>
          </div>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__nQB)}
          >
            <div className={classNames(projectcss.all, sty.column__ch4Vi)}>
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__yAeeV)}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cTAr)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/galinaNMiziNqvJx5MUnsplashjpg.jpeg",
                      fullWidth: 1920,
                      fullHeight: 1278,
                      aspectRatio: undefined
                    }}
                  />
                }
                onSale={true}
                price={"$65.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__fM6M9)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Product"}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column__qPwZe)}>
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__qS8O)}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__gf6Iy)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/igorSonFvPxCqgtwcUnsplashjpg.jpeg",
                      fullWidth: 640,
                      fullHeight: 481,
                      aspectRatio: undefined
                    }}
                  />
                }
                onSale={true}
                price={"$80.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__m9DQg)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Product"}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column___9Bq2B)}>
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__pegbd)}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xf8Xf)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/scottWebbORwRlTgBrPoUnsplashjpg.jpeg",
                      fullWidth: 1920,
                      fullHeight: 1280,
                      aspectRatio: undefined
                    }}
                  />
                }
                price={"$40.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__jyHQh)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Product"}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column__m4BDe)}>
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__p3AZh)}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ufytv)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/freddieMarriageUcfKyTanLuUnsplashjpg.jpeg",
                      fullWidth: 640,
                      fullHeight: 427,
                      aspectRatio: undefined
                    }}
                  />
                }
                onSale={true}
                price={"$100.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__mdT4)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Product"}
              />
            </div>
          </p.Stack>
        ) : null}
        {true ? (
          <FeatureItem
            data-plasmic-name={"featureItem"}
            data-plasmic-override={overrides.featureItem}
            className={classNames("__wab_instance", sty.featureItem)}
          />
        ) : null}
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__zom3)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__aPc4T
              )}
            >
              {"Featured Products"}
            </div>
          </div>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__dmNsk)}
          >
            <div className={classNames(projectcss.all, sty.column__bjVW)}>
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__gJvCq)}
                price={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6Vwi1
                    )}
                  >
                    {"$160.00"}
                  </div>
                }
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__nDqQ)}
                    numReviews={"(12 Review)"}
                    stars={"two"}
                  />
                }
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__w4Pmz
                    )}
                  >
                    {"Designed Sofa"}
                  </div>
                }
                withReviews={true}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column__qgV)}>
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__ulR0O)}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__t0HpX)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/f2.jpeg",
                      fullWidth: 270,
                      fullHeight: 310,
                      aspectRatio: undefined
                    }}
                  />
                }
                price={"$200.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__cLvS3)}
                    stars={"four"}
                  />
                }
                title={"Dining Table"}
                withReviews={true}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column__vrts)}>
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__qjKs)}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fwCbO)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/f3.jpeg",
                      fullWidth: 270,
                      fullHeight: 310,
                      aspectRatio: undefined
                    }}
                  />
                }
                price={"$100.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__s5Isv)}
                    numReviews={"(23 Review)"}
                    stars={"five"}
                  />
                }
                title={"Chair and Table"}
                withReviews={true}
              />
            </div>

            <div className={classNames(projectcss.all, sty.column__el7Tj)}>
              <ProductCard
                className={classNames(
                  "__wab_instance",
                  sty.productCard___0MWfx
                )}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__zNnuC)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/f4.jpeg",
                      fullWidth: 270,
                      fullHeight: 310,
                      aspectRatio: undefined
                    }}
                  />
                }
                price={"$299.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__xXuTz)}
                    numReviews={"(35 Review)"}
                  />
                }
                title={"Modern Arm Chair"}
                withReviews={true}
              />
            </div>
          </p.Stack>
        ) : null}
        {true ? (
          <div className={classNames(projectcss.all, sty.freeBox__kqLm1)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mUvW5
              )}
            >
              {"Latest Blog"}
            </div>
          </div>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__pf5A5)}
          >
            <div className={classNames(projectcss.all, sty.column__sqZ8F)}>
              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__ieopL)}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___2DbFx)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/b1.jpeg",
                      fullWidth: 370,
                      fullHeight: 250,
                      aspectRatio: undefined
                    }}
                  />
                }
              />
            </div>

            <div className={classNames(projectcss.all, sty.column___7UhvZ)}>
              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__tiXqC)}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xTxNe)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/b2.jpeg",
                      fullWidth: 370,
                      fullHeight: 250,
                      aspectRatio: undefined
                    }}
                  />
                }
              />
            </div>

            <div className={classNames(projectcss.all, sty.column___6PnKf)}>
              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__kpbVg)}
                image={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__j9Jwm)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/planty/images/b3.jpeg",
                      fullWidth: 370,
                      fullHeight: 250,
                      aspectRatio: undefined
                    }}
                  />
                }
              />
            </div>
          </p.Stack>
        ) : null}
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__bkUdY)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__jqoji)}
              displayHeight={"60px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"90px"}
              src={{
                src: "/plasmic/planty/images/adidas.png",
                fullWidth: 90,
                fullHeight: 60,
                aspectRatio: undefined
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___0Py)}
              displayHeight={"60px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"91px"}
              src={{
                src: "/plasmic/planty/images/hm.png",
                fullWidth: 91,
                fullHeight: 60,
                aspectRatio: undefined
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__il5Yb)}
              displayHeight={"60px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"98px"}
              src={{
                src: "/plasmic/planty/images/kappa.png",
                fullWidth: 98,
                fullHeight: 60,
                aspectRatio: undefined
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__n3WbR)}
              displayHeight={"60px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"124px"}
              src={{
                src: "/plasmic/planty/images/lacoste.png",
                fullWidth: 124,
                fullHeight: 60,
                aspectRatio: undefined
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__dpQIp)}
              displayHeight={"60px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"125px"}
              src={{
                src: "/plasmic/planty/images/levis.png",
                fullWidth: 125,
                fullHeight: 60,
                aspectRatio: undefined
              }}
            />
          </p.Stack>
        ) : null}
        {true ? (
          <Footer className={classNames("__wab_instance", sty.footer__fWXb4)} />
        ) : null}
      </div>

      <p.Stack
        as={"div"}
        data-plasmic-name={"bestSellers"}
        data-plasmic-override={overrides.bestSellers}
        hasGap={true}
        className={classNames(projectcss.all, sty.bestSellers)}
      >
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__icgHm)}
          >
            <Icon2Icon
              className={classNames(projectcss.all, sty.svg___2W9E)}
              role={"img"}
            />

            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__cWhV
              )}
            >
              {"Best sellers"}
            </h2>
          </p.Stack>
        ) : null}
        {true ? (
          <ProductRow
            data-plasmic-name={"productRow"}
            data-plasmic-override={overrides.productRow}
            className={classNames("__wab_instance", sty.productRow)}
          />
        ) : null}
      </p.Stack>

      <p.Stack
        as={"div"}
        data-plasmic-name={"bigPlants"}
        data-plasmic-override={overrides.bigPlants}
        hasGap={true}
        className={classNames(projectcss.all, sty.bigPlants)}
      >
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__u4Rlc)}
          >
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__yMqXd
              )}
            >
              {"Big plants"}
            </h2>
          </p.Stack>
        ) : null}

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.columns__yysDc)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__no4Kp)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___6W2Uo)}
              displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/planty/images/plant6Jpg.png",
                fullWidth: 400,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__wCsbO)}>
                <Icon3Icon
                  className={classNames(projectcss.all, sty.svg___0AjKi)}
                  role={"img"}
                />
              </div>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__gmo11)}>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__tSuXu
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"Donec finibus"}
              </p.PlasmicLink>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9QK91
                )}
              >
                {"bigplants"}
              </div>

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__daZlZ
                )}
              >
                {"$100.00"}
              </h5>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__h4DDp)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__xntxg)}
              displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/planty/images/plant1Jpg.png",
                fullWidth: 400,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__lmTvq)}>
                <Icon3Icon
                  className={classNames(projectcss.all, sty.svg__v9Kns)}
                  role={"img"}
                />
              </div>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__afSr6)}>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__ouPeW
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"Nulla suscipit"}
              </p.PlasmicLink>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cfXje
                )}
              >
                {"bigplants "}
              </div>

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__lOze
                )}
              >
                {"$49.40 "}
              </h5>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__peIsc)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___2VPq7)}
              displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/planty/images/plant7Jpg.png",
                fullWidth: 400,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__s8CIe)}>
                <Icon3Icon
                  className={classNames(projectcss.all, sty.svg__bortF)}
                  role={"img"}
                />
              </div>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__cfHr7)}>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__ohvD9
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"Sed consectetur"}
              </p.PlasmicLink>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hunsk
                )}
              >
                {"bigplants "}
              </div>

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__yePK
                )}
              >
                {"$18.40 "}
              </h5>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__fPol0)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__iloPb)}
              displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/planty/images/plant5Jpg.png",
                fullWidth: 400,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__p4BjM)}>
                <Icon3Icon
                  className={classNames(projectcss.all, sty.svg__q1UL)}
                  role={"img"}
                />
              </div>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__nLYpa)}>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__e3BA
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"Vestibulum eget"}
              </p.PlasmicLink>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__utMba
                )}
              >
                {"bigplants "}
              </div>

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5___7JZr
                )}
              >
                {"$220.40 "}
              </h5>
            </div>
          </p.Stack>
        </p.Stack>
      </p.Stack>

      <p.Stack
        as={"div"}
        data-plasmic-name={"cactuses"}
        data-plasmic-override={overrides.cactuses}
        hasGap={true}
        className={classNames(projectcss.all, sty.cactuses)}
      >
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___8Mmy4)}
          >
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__ooDiZ
              )}
            >
              {"Cactuses"}
            </h2>
          </p.Stack>
        ) : null}

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.columns__dj8Dm)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__rrs7X)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__wacZp)}
              displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/planty/images/plant41Jpg.png",
                fullWidth: 400,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__uy5Cs)}>
                <Icon3Icon
                  className={classNames(projectcss.all, sty.svg__oZbSe)}
                  role={"img"}
                />
              </div>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__kML9)}>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link___3Wv0Q
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"Cras molestie"}
              </p.PlasmicLink>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lQk53
                )}
              >
                {"cactuses "}
              </div>

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__m2Z2U
                )}
              >
                {"$24.99"}
              </h5>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__qPd9Y)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__pfo02)}
              displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/planty/images/plant31Jpg.png",
                fullWidth: 400,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___9W769)}>
                <Icon3Icon
                  className={classNames(projectcss.all, sty.svg__teh66)}
                  role={"img"}
                />
              </div>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__tSfaa)}>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__adg1F
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"Curabitur eu tempor"}
              </p.PlasmicLink>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nD3T1
                )}
              >
                {"Cactuses"}
              </div>

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__zcg2N
                )}
              >
                {"$49.40 "}
              </h5>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__s4Lp3)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__laio1)}
              displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/planty/images/plant9Webp.webp",
                fullWidth: 400,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__lQByT)}>
                <Icon3Icon
                  className={classNames(projectcss.all, sty.svg__zs4A)}
                  role={"img"}
                />
              </div>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__eoChV)}>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__jCiQx
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"Fusce sagittis"}
              </p.PlasmicLink>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rEV1
                )}
              >
                {"Cactuses"}
              </div>

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__uvgw7
                )}
              >
                {"$49.40 "}
              </h5>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__aloq5)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__ngSt2)}
              displayHeight={"270px /* plasmic-token: dSJ4iuMuCkBucj */"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/planty/images/plant2Webp.webp",
                fullWidth: 400,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__jw6Kn)}>
                <Icon3Icon
                  className={classNames(projectcss.all, sty.svg__p5YTo)}
                  role={"img"}
                />
              </div>
            ) : null}

            <div className={classNames(projectcss.all, sty.freeBox__gRwVx)}>
              <p.PlasmicLink
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__mZxBw
                )}
                component={Link}
                platform={"nextjs"}
              >
                {"Integer porta"}
              </p.PlasmicLink>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9OPhZ
                )}
              >
                {"Cactuses"}
              </div>

              <h5
                className={classNames(
                  projectcss.all,
                  projectcss.h5,
                  projectcss.__wab_text,
                  sty.h5__amZ9G
                )}
              >
                {"$49.40 "}
              </h5>
            </div>
          </p.Stack>
        </p.Stack>
      </p.Stack>

      <p.Stack
        as={"div"}
        data-plasmic-name={"testimonials"}
        data-plasmic-override={overrides.testimonials}
        hasGap={true}
        className={classNames(projectcss.all, sty.testimonials)}
      >
        {true ? (
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__oB5HU)}
          >
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2___7UyO9
              )}
            >
              {"Testimonials"}
            </h2>
          </p.Stack>
        ) : null}

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.columns__o0N9A)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__pYkNs)}
          >
            <QuotessvgIcon
              className={classNames(projectcss.all, sty.svg__fMaHk)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iAguj
              )}
            >
              {
                "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
              }
            </div>

            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xNsL)}
              >
                <h5
                  className={classNames(
                    projectcss.all,
                    projectcss.h5,
                    projectcss.__wab_text,
                    sty.h5__scLzC
                  )}
                >
                  {"JOHN DOPE,"}
                </h5>

                <h5
                  className={classNames(
                    projectcss.all,
                    projectcss.h5,
                    projectcss.__wab_text,
                    sty.h5__lVxcn
                  )}
                >
                  {" COLORADO, USA"}
                </h5>
              </p.Stack>
            ) : null}
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__yjRsI)}
          >
            <QuotessvgIcon
              className={classNames(projectcss.all, sty.svg__uTvJ)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__q6NPi
              )}
            >
              {
                "Well I'll be d*mned. These plants really ARE greener than any of my recruits."
              }
            </div>

            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oIezt)}
              >
                <h5
                  className={classNames(
                    projectcss.all,
                    projectcss.h5,
                    projectcss.__wab_text,
                    sty.h5__o0Nhw
                  )}
                >
                  {"MAJOR PAYNE"}
                </h5>

                <h5
                  className={classNames(
                    projectcss.all,
                    projectcss.h5,
                    projectcss.__wab_text,
                    sty.h5__eT3
                  )}
                >
                  {", VA, USA"}
                </h5>
              </p.Stack>
            ) : null}
          </p.Stack>
        </p.Stack>
      </p.Stack>

      <Footer className={classNames("__wab_instance", sty.footer__nzUa)} />
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "h1",
    "button",
    "featureItem",
    "bestSellers",
    "productRow",
    "bigPlants",
    "cactuses",
    "testimonials"
  ],

  h1: ["h1"],
  button: ["button"],
  featureItem: ["featureItem"],
  bestSellers: ["bestSellers", "productRow"],
  productRow: ["productRow"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  testimonials: ["testimonials"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome2__ArgProps,
      internalVariantPropNames: PlasmicHome2__VariantProps
    });

    return PlasmicHome2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome2";
  } else {
    func.displayName = `PlasmicHome2.${nodeName}`;
  }
  return func;
}

export const PlasmicHome2 = Object.assign(
  // Top-level PlasmicHome2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h1: makeNodeComponent("h1"),
    button: makeNodeComponent("button"),
    featureItem: makeNodeComponent("featureItem"),
    bestSellers: makeNodeComponent("bestSellers"),
    productRow: makeNodeComponent("productRow"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    testimonials: makeNodeComponent("testimonials"),
    // Metadata about props expected for PlasmicHome2
    internalVariantProps: PlasmicHome2__VariantProps,
    internalArgProps: PlasmicHome2__ArgProps
  }
);

export default PlasmicHome2;
/* prettier-ignore-end */
